import uuid
import requests
import asyncio
import logging
import sys
import sqlite3
from datetime import datetime
from flask import Flask, request, jsonify
from aiogram import Bot, Dispatcher, F
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from glQiwiApi import YooMoneyAPI

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = "**"  # –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
YOOMONEY_WALLET = "**"  # –ù–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞ YooMoney
YOOMONEY_SECRET = "your_secret_word"  # –°–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ YooMoney
YOOMONEY_AMOUNT = 500  # –°—É–º–º–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ —Ä—É–±–ª—è—Ö
GROUP_ID = -1002291268265  # ID –∑–∞–∫—Ä—ã—Ç–æ–π –≥—Ä—É–ø–ø—ã
BASE_URL = "https://your-app.onrender.com"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ URL –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask
app = Flask(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SQLite
def init_db():
    conn = sqlite3.connect('data.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS payments
                 (user_id TEXT, amount REAL, label TEXT, datetime TEXT, status TEXT)''')
    conn.commit()
    conn.close()

init_db()

# API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É
@app.route('/generate_payment', methods=['GET'])
def generate_payment():
    user_id = request.args.get('user_id')
    label = str(uuid.uuid4())  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–ª–∞—Ç–µ–∂–∞
    link = YooMoneyAPI.create_pay_form(
        receiver=YOOMONEY_WALLET,
        quick_pay_form="shop",
        targets="Subscription",
        payment_type="AC",
        amount=YOOMONEY_AMOUNT,
        label=label
    )
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å –æ –ø–ª–∞—Ç–µ–∂–µ
    conn = sqlite3.connect('data.db')
    c = conn.cursor()
    c.execute("INSERT INTO payments (user_id, amount, label, status) VALUES (?, ?, ?, ?)",
              (user_id, YOOMONEY_AMOUNT, label, "pending"))
    conn.commit()
    conn.close()
    return jsonify({"payment_url": link, "label": label})

# Webhook –¥–ª—è YooMoney
@app.route('/yoomoney-webhook', methods=['POST'])
async def webhook():
    data = request.form.to_dict()
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    from glQiwiApi.utils import YooMoneyNotification
    notification = YooMoneyNotification(data, secret=YOOMONEY_SECRET)
    if not notification.is_valid():
        return "Invalid notification", 400

    if data.get('notification_type') == 'p2p-incoming':
        label = data.get('label')
        amount = float(data.get('amount'))
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
        conn = sqlite3.connect('data.db')
        c = conn.cursor()
        c.execute("UPDATE payments SET status = ?, datetime = ? WHERE label = ?",
                  ("completed", datetime.now().isoformat(), label))
        c.execute("SELECT user_id FROM payments WHERE label = ?", (label,))
        user_id = c.fetchone()[0]
        conn.commit()
        conn.close()
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫—É
        invite_link = await bot.create_chat_invite_link(chat_id=GROUP_ID, member_limit=1)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ —Å—Å—ã–ª–∫—É
        await bot.send_message(user_id, f"–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–∞! –°—É–º–º–∞: {amount} RUB\n–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.\n–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å: {invite_link.invite_link}")
    return "OK", 200

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def command_start_handler(message: Message):
    user_id = str(message.from_user.id)
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ API
    response = requests.get(f"{BASE_URL}/generate_payment?user_id={user_id}")
    data = response.json()
    payment_url = data["payment_url"]

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å", url=payment_url)]
    ])
    welcome_text = (
        "–¢–∞—Ä–∏—Ñ: —Ñ—É–ª–ª\n"
        "–°—Ç–æ–∏–º–æ—Å—Ç—å: 500.00 üá∑üá∫RUB\n"
        "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: 1 –º–µ—Å—è—Ü\n\n"
        "–í—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Å–ª–µ–¥—É—é—â–∏–º —Ä–µ—Å—É—Ä—Å–∞–º:\n"
        "‚Ä¢ –ú–æ–π –∫–∞–π—Ñ (–∫–∞–Ω–∞–ª)"
    )
    await message.answer(welcome_text, reply_markup=keyboard)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def on_startup(_):
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")

def run_flask():
    app.run(host='0.0.0.0', port=5000)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    from threading import Thread
    flask_thread = Thread(target=run_flask)
    flask_thread.start()
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    asyncio.run(dp.start_polling(bot))
